[{"C:\\Users\\Lucija\\gopatient\\client\\src\\reportWebVitals.js":"1","C:\\Users\\Lucija\\gopatient\\client\\src\\index.js":"2","C:\\Users\\Lucija\\gopatient\\client\\src\\App.js":"3","C:\\Users\\Lucija\\gopatient\\client\\src\\components\\withListLoading.js":"4","C:\\Users\\Lucija\\gopatient\\client\\src\\components\\Login.js":"5","C:\\Users\\Lucija\\gopatient\\client\\src\\components\\AddPatient.js":"6","C:\\Users\\Lucija\\gopatient\\client\\src\\components\\List.js":"7"},{"size":362,"mtime":1610305749711,"results":"8","hashOfConfig":"9"},{"size":261,"mtime":1610367975648,"results":"10","hashOfConfig":"9"},{"size":1525,"mtime":1610380401271,"results":"11","hashOfConfig":"9"},{"size":360,"mtime":1610379646826,"results":"12","hashOfConfig":"9"},{"size":1504,"mtime":1610373844356,"results":"13","hashOfConfig":"9"},{"size":2337,"mtime":1610373875729,"results":"14","hashOfConfig":"9"},{"size":1090,"mtime":1610380027901,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pkdopx",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\Users\\Lucija\\gopatient\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Lucija\\gopatient\\client\\src\\index.js",[],"C:\\Users\\Lucija\\gopatient\\client\\src\\App.js",["32","33"],"C:\\Users\\Lucija\\gopatient\\client\\src\\components\\withListLoading.js",[],"C:\\Users\\Lucija\\gopatient\\client\\src\\components\\Login.js",["34"],"import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login({ setToken }) {\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await loginUser({\r\n          username,\r\n          password\r\n        });\r\n        setToken(token);\r\n      }\r\n\r\n    async function loginUser(credentials) {\r\n        return fetch('http://localhost:10000/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(credentials)\r\n        })\r\n          .then(data => data.json())\r\n          \r\n       }\r\n\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <h1>Veuillez vous connecter.</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Nom d'utilisateur</p>\r\n          <input type=\"text\" onChange={e => setUserName(e.target.value)}/>\r\n        </label>\r\n        <label>\r\n          <p>Mot de passe</p>\r\n          <input type=\"password\" onChange={e => setPassword(e.target.value)}/>\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n  }\r\n","C:\\Users\\Lucija\\gopatient\\client\\src\\components\\AddPatient.js",["35"],"C:\\Users\\Lucija\\gopatient\\client\\src\\components\\List.js",["36","37"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst List = (props) => {\r\n\r\nconst { patients } = props;\r\n\r\nif (!patients || patients.length === 0) return <p>Aucun patient trouvé.</p>;\r\n  return (\r\n    <ul>\r\n      {patients.map((patient) => {\r\n        return (\r\n            \r\n          <div>\r\n\r\n            <ul>\r\n            <li><span className='lastname'><b>Nom de famille : </b>{patient.lastname}</span></li>\r\n            <li><span className='firstname'><b>Prénom : </b>{patient.firstname}</span></li>\r\n            <li><span className='gender'><b>Genre : </b>{patient.gender}</span></li>\r\n            <li><span className='birthday'><b>Date de naissance : </b>{patient.birthday}</span></li>\r\n            <li><span className='height'><b>Taille : </b>{patient.height}</span></li>\r\n            <li><span className='weight'><b>Poids : </b>{patient.weight}</span></li>\r\n            <li><span className='email'><b>Email : </b>{patient.email}</span></li>\r\n            </ul>\r\n            <br></br>\r\n            </div> \r\n            );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nexport default List;",{"ruleId":"38","severity":1,"message":"39","line":6,"column":10,"nodeType":"40","messageId":"41","endLine":6,"endColumn":23},{"ruleId":"38","severity":1,"message":"42","line":9,"column":8,"nodeType":"40","messageId":"41","endLine":9,"endColumn":18},{"ruleId":"38","severity":1,"message":"43","line":9,"column":11,"nodeType":"40","messageId":"41","endLine":9,"endColumn":18},{"ruleId":"38","severity":1,"message":"44","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":17},{"ruleId":"38","severity":1,"message":"45","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},{"ruleId":"38","severity":1,"message":"46","line":1,"column":28,"nodeType":"40","messageId":"41","endLine":1,"endColumn":36},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Addpatient' is defined but never used.","'history' is assigned a value but never used.","'PropTypes' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used."]